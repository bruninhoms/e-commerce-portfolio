{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + (cartItem.price * (1 - cartItem.discount / 100)).toFixed(0) * cartItem.quantity, 0));","map":{"version":3,"sources":["C:\\Users\\bruno\\Documents\\react\\e-commerce-portfolio\\client\\src\\redux\\cart\\cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price","discount","toFixed"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACTA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGK,CAHL,CAH8C,CAA3C;AAUP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACTA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAG,CAACC,QAAQ,CAACG,KAAT,IAAkB,IAAIH,QAAQ,CAACI,QAAT,GAAkB,GAAxC,CAAD,EAA+CC,OAA/C,CAAuD,CAAvD,IAA4DL,QAAQ,CAACC,QAF/F,EAGK,CAHL,CAHyC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectCart = state => state.cart;\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCart],\r\n    cart => cart.cartItems\r\n)\r\n\r\nexport const selectCartHidden = createSelector(\r\n    [selectCart],\r\n    cart => cart.hidden\r\n)\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems],\r\n    cartItems => \r\n    cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) => \r\n        accumulatedQuantity + cartItem.quantity,\r\n         0\r\n        )\r\n)\r\n\r\nexport const selectCartTotal = createSelector(\r\n    [selectCartItems],\r\n    cartItems => \r\n    cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) => \r\n        accumulatedQuantity + (cartItem.price * (1 - cartItem.discount/100)).toFixed(0) * cartItem.quantity,\r\n         0\r\n        )\r\n)"]},"metadata":{},"sourceType":"module"}