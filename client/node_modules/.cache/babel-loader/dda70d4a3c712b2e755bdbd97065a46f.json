{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\bruno\\\\Documents\\\\react\\\\e-commerce-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { store } from 'react-notifications-component';\nimport UserActionTypes from './user.types.js';\nimport personalizedNotification from '../../components/notifications/notifications.component.jsx';\nimport { signInFailure, signInSucess, signOutSuccess, signOutFailure, signUpFailure, signUpSucess } from './user.actions.js';\nimport { auth, providerGoogle, providerFacebook, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils.js';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSucess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data)));\n    yield store.addNotification({\n      content: personalizedNotification('Sucess !', 'Log in sucessful', 'sucess'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  } catch (error) {\n    yield put(signInFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\nexport function* getSnapshotFromUserSignUpAndSignIn(userAuth, displayName) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, {\n      displayName\n    });\n    const userSnapshot = yield userRef.get();\n    yield put(signUpSucess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data)));\n    yield put(signInSucess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data)));\n    yield store.addNotification({\n      content: personalizedNotification('Sucess !', 'User created', 'sucess'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Something went wrong', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(providerGoogle),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\n;\nexport function* signInWithFacebook() {\n  try {\n    const _ref2 = yield auth.signInWithPopup(providerFacebook),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Failed to Sign Out', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref4 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref4.user;\n\n    yield getSnapshotFromUserSignUpAndSignIn(user, displayName);\n  } catch (error) {\n    yield put(signUpFailure(error));\n    yield store.addNotification({\n      content: personalizedNotification('Failed !', 'Something is wrong!', 'error'),\n      container: 'bottom-left',\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000\n      }\n    });\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onFacebookSignInStart() {\n  yield takeLatest(UserActionTypes.FACEBOOK_SIGN_IN_START, signInWithFacebook);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onFacebookSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\bruno\\Documents\\react\\e-commerce-portfolio\\client\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","store","UserActionTypes","personalizedNotification","signInFailure","signInSucess","signOutSuccess","signOutFailure","signUpFailure","signUpSucess","auth","providerGoogle","providerFacebook","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","addNotification","content","container","animationIn","animationOut","dismiss","duration","error","getSnapshotFromUserSignUpAndSignIn","displayName","signInWithGoogle","signInWithPopup","user","signInWithFacebook","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onFacebookSignInStart","FACEBOOK_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { store } from 'react-notifications-component';\r\n\r\nimport UserActionTypes from './user.types.js';\r\nimport personalizedNotification from '../../components/notifications/notifications.component.jsx';\r\n\r\nimport {signInFailure, \r\n        signInSucess,\r\n        signOutSuccess,\r\n        signOutFailure,\r\n        signUpFailure,\r\n        signUpSucess} from './user.actions.js';\r\n\r\nimport { auth, \r\n        providerGoogle, \r\n        providerFacebook, \r\n        createUserProfileDocument,\r\n        getCurrentUser } from '../../firebase/firebase.utils.js';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{   \r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSucess({ id: userSnapshot.id, ...userSnapshot.data}));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Sucess !', 'Log in sucessful', 'sucess'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n                duration: 1000,\r\n            }\r\n            })\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n}\r\n\r\nexport function* getSnapshotFromUserSignUpAndSignIn(userAuth, displayName) {\r\n    try{   \r\n        const userRef = yield call(createUserProfileDocument, userAuth, {displayName});\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signUpSucess({ id: userSnapshot.id, ...userSnapshot.data}));\r\n        yield put(signInSucess({ id: userSnapshot.id, ...userSnapshot.data}));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Sucess !', 'User created', 'sucess'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    } catch(error) {\r\n        yield put(signUpFailure(error));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Something went wrong', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try{\r\n        const {user}  = yield auth.signInWithPopup(providerGoogle);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n};\r\n\r\nexport function* signInWithFacebook() {\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(providerFacebook);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n};\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Check your credentials', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n};\r\n\r\nexport function* isUserAuthenticated(){\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n};\r\n\r\nexport function* signOut() {\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Failed to Sign Out', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n};\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n    try{\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserSignUpAndSignIn(user, displayName);\r\n    }catch(error){\r\n        yield put(signUpFailure(error));\r\n        yield store.addNotification({\r\n            content: personalizedNotification('Failed !', 'Something is wrong!', 'error'),\r\n            container: 'bottom-left',\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 1000,\r\n            }\r\n          })\r\n    }\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n};\r\n\r\nexport function* onFacebookSignInStart() {\r\n    yield takeLatest(UserActionTypes.FACEBOOK_SIGN_IN_START, signInWithFacebook);\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n};\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n};\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n};\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onFacebookSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}