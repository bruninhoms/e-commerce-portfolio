{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\bruno\\\\Documents\\\\react\\\\e-commerce-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\bruno\\\\Documents\\\\react\\\\e-commerce-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\react\\\\e-commerce-portfolio\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FacebookLoginButton } from \"react-social-login-buttons\";\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\nimport { BufferLoginButton } from \"react-social-login-buttons\";\nimport FormInput from '../form-input/form-input.component.jsx';\nimport { googleSignInStart, facebookSignInStart, emailSignInStart } from '../../redux/user/user.actions.js';\nimport { SignInContainer, Buttons } from './sign-in.styles.jsx';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart,\n  facebookSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign in with your e-mail and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(BufferLoginButton, {\n    style: {\n      fontFamily: 'Karla'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" Sign in with Email \"), React.createElement(GoogleLoginButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    style: {\n      fontFamily: 'Karla'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Sign in with Google \"), React.createElement(FacebookLoginButton, {\n    type: \"button\",\n    onClick: facebookSignInStart,\n    style: {\n      fontFamily: 'Karla'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" Sign in with Facebook \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  facebookSignInStart: () => dispatch(facebookSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\bruno\\Documents\\react\\e-commerce-portfolio\\client\\src\\components\\sign-in\\sign-in.component.jsx"],"names":["React","useState","connect","FacebookLoginButton","GoogleLoginButton","BufferLoginButton","FormInput","googleSignInStart","facebookSignInStart","emailSignInStart","SignInContainer","Buttons","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","fontFamily","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FacebookLoginButton } from \"react-social-login-buttons\";\r\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\r\nimport { BufferLoginButton  } from \"react-social-login-buttons\";\r\n\r\nimport FormInput from '../form-input/form-input.component.jsx';\r\n\r\nimport { googleSignInStart, facebookSignInStart, emailSignInStart } from '../../redux/user/user.actions.js';\r\n\r\nimport {\r\n    SignInContainer,\r\n    Buttons\r\n} from './sign-in.styles.jsx';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart, facebookSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\r\n    const { email, password } = userCredentials;\r\n\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        emailSignInStart(email, password);\r\n    };\r\n    \r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({...userCredentials, [name]: value });\r\n    };\r\n    return(\r\n        <SignInContainer>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your e-mail and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    value={email} \r\n                    handleChange={handleChange}\r\n                    label = \"Email\"\r\n                    required\r\n                />\r\n\r\n                <FormInput \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    handleChange={handleChange}\r\n                    label = \"Password\"\r\n                    required\r\n                />\r\n                <Buttons>\r\n                    <BufferLoginButton style={{fontFamily: 'Karla'}}> Sign in with Email </BufferLoginButton >\r\n                    <GoogleLoginButton type='button' onClick={googleSignInStart} style={{fontFamily: 'Karla'}}> Sign in with Google </GoogleLoginButton>\r\n                    <FacebookLoginButton type='button' onClick={facebookSignInStart} style={{fontFamily: 'Karla' }}> Sign in with Facebook </FacebookLoginButton>\r\n                </Buttons>\r\n                \r\n            </form>\r\n        </SignInContainer>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    facebookSignInStart: () => dispatch(facebookSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}